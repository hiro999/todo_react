{"ast":null,"code":"import _toConsumableArray from \"/Users/yamaguchihiroshishi/Documents/GitHub/todo_react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/yamaguchihiroshishi/Documents/GitHub/todo_react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/yamaguchihiroshishi/Documents/GitHub/todo_react/src/App.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport \"./styles.css\";\nimport { InputTodo } from \"./components/InputTodo\";\nimport { IncompleteTodos } from \"./components/IncompleteTodos\";\nimport { CompleteTodos } from \"./components/CompleteTodos\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport var App = function App() {\n  _s();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      todoText = _useState2[0],\n      setTodoText = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      incompleteTodos = _useState4[0],\n      setIncompleteTodos = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      completeTodos = _useState6[0],\n      setCompleteTodos = _useState6[1]; //refresh input field when it's edited\n\n\n  var onChangeTodoText = function onChangeTodoText(event) {\n    return setTodoText(event.target.value);\n  }; //set add function\n\n\n  var onClickAdd = function onClickAdd() {\n    //reject empty input\n    if (todoText === \"\") return; //add the input text to the incomplete todo list\n\n    var newTodos = [].concat(_toConsumableArray(incompleteTodos), [todoText]);\n    setIncompleteTodos(newTodos);\n    setTodoText(\"\");\n  }; //set delete function\n\n\n  var onClickDelete = function onClickDelete(index) {\n    var newTodos = _toConsumableArray(incompleteTodos);\n\n    newTodos.splice(index, 1);\n    setIncompleteTodos(newTodos);\n  }; //set done function\n\n\n  var onClickDone = function onClickDone(index) {\n    //add the item to the complete list\n    var newCompleteTodos = [].concat(_toConsumableArray(completeTodos), [incompleteTodos[index]]);\n    setCompleteTodos(newCompleteTodos); //delete from incomplete list\n\n    var newIncompleteTodos = _toConsumableArray(incompleteTodos);\n\n    newIncompleteTodos.splice(index, 1);\n    setIncompleteTodos(newIncompleteTodos);\n  }; //set revert function\n\n\n  var onClickRevert = function onClickRevert(index) {\n    //add to incomplete list\n    var newIncompleteTodos = [].concat(_toConsumableArray(incompleteTodos), [completeTodos[index]]);\n    setIncompleteTodos(newIncompleteTodos); //delete from complete list\n\n    var newCompleteTodos = _toConsumableArray(completeTodos);\n\n    newCompleteTodos.splice(index, 1);\n    setCompleteTodos(newCompleteTodos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(InputTodo, {\n      todoText: todoText,\n      onChange: onChangeTodoText,\n      onClick: onClickAdd,\n      disabled: incompleteTodos.length >= 5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, _this), incompleteTodos.length >= 5 && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: \"Maximum number of todo is 5.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(IncompleteTodos, {\n      incompleteTodos: incompleteTodos,\n      onClickDone: onClickDone,\n      onClickDelete: onClickDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(CompleteTodos, {\n      completeTodos: completeTodos,\n      onClickRevert: onClickRevert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(App, \"6sjjupbd+C/9cL/w5VnyjMBy2Hc=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/yamaguchihiroshishi/Documents/GitHub/todo_react/src/App.jsx"],"names":["useState","InputTodo","IncompleteTodos","CompleteTodos","App","todoText","setTodoText","incompleteTodos","setIncompleteTodos","completeTodos","setCompleteTodos","onChangeTodoText","event","target","value","onClickAdd","newTodos","onClickDelete","index","splice","onClickDone","newCompleteTodos","newIncompleteTodos","onClickRevert","length","color"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport \"./styles.css\";\nimport { InputTodo } from \"./components/InputTodo\";\nimport { IncompleteTodos } from \"./components/IncompleteTodos\";\nimport { CompleteTodos } from \"./components/CompleteTodos\";\n\nexport const App = () => {\n  const [todoText, setTodoText] = useState(\"\");\n  const [incompleteTodos, setIncompleteTodos] = useState([]);\n  const [completeTodos, setCompleteTodos] = useState([]);\n\n  //refresh input field when it's edited\n  const onChangeTodoText = (event) => setTodoText(event.target.value);\n\n  //set add function\n  const onClickAdd = () => {\n    //reject empty input\n    if (todoText === \"\") return;\n    //add the input text to the incomplete todo list\n    const newTodos = [...incompleteTodos, todoText];\n    setIncompleteTodos(newTodos);\n    setTodoText(\"\");\n  };\n\n  //set delete function\n  const onClickDelete = (index) => {\n    const newTodos = [...incompleteTodos];\n    newTodos.splice(index, 1);\n    setIncompleteTodos(newTodos);\n  };\n\n  //set done function\n  const onClickDone = (index) => {\n    //add the item to the complete list\n    const newCompleteTodos = [...completeTodos, incompleteTodos[index]];\n    setCompleteTodos(newCompleteTodos);\n    //delete from incomplete list\n    const newIncompleteTodos = [...incompleteTodos];\n    newIncompleteTodos.splice(index, 1);\n    setIncompleteTodos(newIncompleteTodos);\n  };\n\n  //set revert function\n  const onClickRevert = (index) => {\n    //add to incomplete list\n    const newIncompleteTodos = [...incompleteTodos, completeTodos[index]];\n    setIncompleteTodos(newIncompleteTodos);\n    //delete from complete list\n    const newCompleteTodos = [...completeTodos];\n    newCompleteTodos.splice(index, 1);\n    setCompleteTodos(newCompleteTodos);\n  };\n\n  return (\n    <>\n      <InputTodo\n        todoText={todoText}\n        onChange={onChangeTodoText}\n        onClick={onClickAdd}\n        disabled={incompleteTodos.length >= 5}\n      />\n      {incompleteTodos.length >= 5 && (\n        <p style={{ color: \"red\" }}>Maximum number of todo is 5.</p>\n      )}\n      <IncompleteTodos\n        incompleteTodos={incompleteTodos}\n        onClickDone={onClickDone}\n        onClickDelete={onClickDelete}\n      />\n      <CompleteTodos\n        completeTodos={completeTodos}\n        onClickRevert={onClickRevert}\n      />\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}